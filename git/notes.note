1. github中，文件内容的默认编码应该是UTF-8。
2. git clone时，如果报错：Protocol https not supported or disabled in libcurl。那么考虑删除文件“C:\Windows\SysWOW64\libcurl.dll”。
3. ren [oldName] [newName] 重命名文件。
4. git rm [filePath]  删除文件
5. git config --global credential.helper store 记住密码
6. git config --global push.default matching 设置推送的默认分支。

其他技巧
==========================================================================
设置忽略的文件

在仓库根目录，新建文件.gitignore。内容参考如下：

--------------------------------------------------------------------
# 此为注释，将被Git忽略
# 忽略所有 .class 结尾的文件
*.class

# 但是 lib.class 除外
!lib.class

# 仅仅忽略项目根目录下的 TODD 文件，不包含其他目录或子目录下的TODD文件
/TODD

# 忽略 build/ 目录下的所有文件
build/

# 会忽略 doc/notes.text 但不包含 doc/server/arch.text
doc/*.txt
---------------------------------------------------------------------

.gitignore的语法如下：
---------------------------------------------------------------------
.gitignore 的语法规范如下：

　　·所有空行或者以注释符号 ＃ 开头的行都会被 Git 忽略；
　　·可以使用标准的 glob 模式匹配。 * 匹配模式最后跟反斜杠（/）说明要忽略的是目录。 * 要忽略指定模式以外的文件或目录，可以在模式前加上惊叹号（!）取反。

    glob 模式匹配：

　　·星号（*）匹配零个或多个任意字符；
　　·[abc] 匹配任何一个列在方括号中的字符（这个例子要么匹配一个 a，要么匹配一个 b，要么匹配一个 c）；
　　·问号（?）只匹配一个任意字符；
　　·[0-9a-zA-Z] 在方括号中使用短划线分隔两个字符，表示所有在这两个字符范围内的都可以匹配（比如 [0-9a-zA-Z] 表示匹配所有 0 到 9 的数字和所有字母）；
　　·\ 转义字符。

    注：理论上来说，在要忽略的格式文件后面添加注释是允许的，但经过我的验证，结果发现这样子操作并不能达到预期的效果。
---------------------------------------------------------------------

然后设置局部属性
git config --local core.excludesfile .gitignore

备注：
当然可以进行用户级别的设置。如
在[User]目录下创建.gitignore。
运行命令：git config --global core.excludesfile .gitignore

==========================================================================
将beyondcompare于git集成

在[git]/etc/gitconfig文件内添加如下内容：
----------------------------------------------
[diff]
    tool = bc3
[difftool]
    prompt = false
[difftool "bc3"]
    #use cygpath to transform cygwin path $LOCAL (something like /tmp/U5VvP1_abc) to windows path, because bc3 is a windows software
    #cmd = \"c:/program files/beyond compare 3/bcomp.exe\" "$(cygpath -w $LOCAL)" "$REMOTE"
    cmd = bcompare "$LOCAL" "$REMOTE"
[merge]
    tool = bc3
[mergetool]
    prompt = false
[mergetool "bc3"]
    #trustExitCode = true
    #cmd = \"c:/program files/beyond compare 3/bcomp.exe\" "$LOCAL" "$REMOTE" "$BASE" "$MERGED"
    cmd = bcompare "$LOCAL" "$REMOTE" "$BASE" "$MERGED"

----------------------------------------------
注意，此配置对应的命令是：git difftool；而不是：git diff。

==========================================================================
将git的core.editor设置成系统安装的vim软件

git的core.editor=vim后，git commit命令，引出的编辑器，不是window系统安装的vim，而是git软件自带的vim插件。插件地址如下[git]/share/vim/vim74/vim.exe。

开始玩git时，将git的core.editor=vim后，提交代码，输入中文是，不能输入“文”字。然后，我找原因，发现我自己安装的vim可以打印“文”字。然后我在全盘搜索“vim.exe”发下除了在我自己安装的vim外，git安装目录也有一个vim，在这里：[git]/share/vim/vim74/vim.exe。我打开这个文件，然后输入“文化”这个词，果然，“文”字不能正常的显示出来！

让git继承我们自己安装的vim。
-----------------------------------------------------------
修改文件[git]/bin/vim文件。注释掉原来的代码，改为：
"C:/Program Files (x86)/Vim/vim74/vim.exe" "$@"
记得，不要在前面加exec。

另外一种方法。
将C:\Windows\vim.bat复制到[git]/bin文件夹下。
然后修改git的配置：
   git config --local core.editor vim.bat

至于其他更好的方法，如让git可以导入系统变量、系统命令等，没有研究那些方法。
-----------------------------------------------------------

==========================================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
